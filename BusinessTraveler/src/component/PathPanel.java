/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package component;

import javax.swing.ImageIcon;
import model.BusinessPoint.BusinessPoint;
import model.Environment.Weather.Weather;
import model.WorldMap.WorldMap;
import myinterface.Observer;
import myinterface.Subject;

/**
 *
 * @author Yun_c
 */
public class PathPanel extends javax.swing.JPanel implements Observer {

    /**
     * Creates new form PathPanel
     */
    public PathPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        arrivalWeatherPic = new component.BackgroundPanel();
        DestWeatherPic = new component.BackgroundPanel();
        jSeparator1 = new javax.swing.JSeparator();
        totalCost = new javax.swing.JLabel();
        aWeatherCost = new javax.swing.JLabel();
        bWeatherCost = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setPreferredSize(new java.awt.Dimension(400, 72));

        arrivalWeatherPic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout arrivalWeatherPicLayout = new javax.swing.GroupLayout(arrivalWeatherPic);
        arrivalWeatherPic.setLayout(arrivalWeatherPicLayout);
        arrivalWeatherPicLayout.setHorizontalGroup(
            arrivalWeatherPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 88, Short.MAX_VALUE)
        );
        arrivalWeatherPicLayout.setVerticalGroup(
            arrivalWeatherPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        DestWeatherPic.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout DestWeatherPicLayout = new javax.swing.GroupLayout(DestWeatherPic);
        DestWeatherPic.setLayout(DestWeatherPicLayout);
        DestWeatherPicLayout.setHorizontalGroup(
            DestWeatherPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 88, Short.MAX_VALUE)
        );
        DestWeatherPicLayout.setVerticalGroup(
            DestWeatherPicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSeparator1.setBackground(new java.awt.Color(153, 153, 153));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, null, new java.awt.Color(153, 102, 0), null, new java.awt.Color(153, 102, 0)));

        totalCost.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        totalCost.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalCost.setText("0");

        aWeatherCost.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        aWeatherCost.setText("0");

        bWeatherCost.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        bWeatherCost.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(arrivalWeatherPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aWeatherCost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalCost, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bWeatherCost)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DestWeatherPic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(arrivalWeatherPic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(DestWeatherPic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalCost)
                    .addComponent(aWeatherCost)
                    .addComponent(bWeatherCost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.BackgroundPanel DestWeatherPic;
    private javax.swing.JLabel aWeatherCost;
    private component.BackgroundPanel arrivalWeatherPic;
    private javax.swing.JLabel bWeatherCost;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel totalCost;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Subject s) {
        ImageIcon defaultIcon = new ImageIcon(this.getClass().getClassLoader().getResource("img/default.png"));
        if (s instanceof WorldMap) {
            WorldMap wMap = WorldMap.getInstance();
            BusinessPoint a = wMap.getNowArrive();
            BusinessPoint b = wMap.getLocked();
            int aCost = 0;
            int bCost = 0;
            int totalCost = 0;
                    
            if (b == null) {
                b = wMap.getChosen();
            }
            if (a != null) {
                ImageIcon icon = defaultIcon;
                if (a.getWeather() != null) {
                    icon = a.getWeather().getImg();
                }
                this.arrivalWeatherPic.setImage(icon);
            }else{
                this.arrivalWeatherPic.setImage(defaultIcon);
            }
            if (b != null) {
                ImageIcon icon = defaultIcon;
                if (b.getWeather() != null) {
                    icon = b.getWeather().getImg();
                }
                this.DestWeatherPic.setImage(icon);
            }else{
                this.DestWeatherPic.setImage(defaultIcon);
            }
        }
        this.repaint();
        this.revalidate();
    }
}
